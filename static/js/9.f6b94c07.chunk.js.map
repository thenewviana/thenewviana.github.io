{"version":3,"sources":["modules/Users/config.js","modules/Users/services/RoleService.js","modules/Users/views/RoleView.js","modules/Users/components/Role.js"],"names":["config","RoleService","sdk","this","callback","doc","database","createDocument","then","d","catch","e","errorHandler","listDocuments","docs","documents","updateDocument","deleteDocument","view","props","state","onRoleSelected","removeRole","handleSubmit","handleChange","md","className","name","roleList","map","item","index","onClick","style","cursor","backgroundColor","selectedRole","src","alt","desc","size","variant","shape","color","onSubmit","roleForm","htmlFor","value","placeholder","onChange","rows","readOnly","type","resetData","ListStation","getList","roleService","list","callbackList","setState","event","target","preventDefault","loading","update","callbackSubmit","create","content","title","s","confirmRemoved","modal","data","callbackRemove","auth","delete","React","Component"],"mappings":"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","file":"static/js/9.f6b94c07.chunk.js","sourcesContent":["export const config = {\r\n    collectionId: \"601fc48799c07\",\r\n    readPermission: ['*'],\r\n    writePermission: ['*']\r\n}","import {config} from '../config';\r\nimport {errorHandler} from 'service.js';\r\n\r\nexport default class RoleService {\r\n    constructor(sdk) {\r\n        this.sdk = sdk;\r\n    }\r\n\r\n    create(callback, doc) {\r\n        this.sdk.database.createDocument(config.collectionId, doc, config.readPermission, config.writePermission)\r\n        .then((d) => {\r\n            if(callback) {\r\n                callback(d);\r\n            }\r\n        })\r\n        .catch((e) => errorHandler(e));\r\n    }\r\n\r\n    list(callback) {\r\n        this.sdk.database.listDocuments(config.collectionId)\r\n        .then((d)=>{\r\n            if(callback){\r\n                const docs = d.documents;\r\n                callback(docs);\r\n            }\r\n        })\r\n        .catch((e) => errorHandler(e));\r\n    }\r\n\r\n    update(callback, doc) {\r\n        this.sdk.database.updateDocument(config.collectionId, doc['$id'], doc, config.readPermission, config.writePermission)\r\n        .then((d) => {\r\n            if(callback) {\r\n                callback(d);\r\n            }\r\n        })\r\n        .catch((e) => errorHandler(e));\r\n    }\r\n\r\n    delete(callback, doc) {\r\n        this.sdk.database.deleteDocument(config.collectionId, doc['$id'])\r\n        .then((d) => {\r\n            if(callback) {\r\n                callback(d);\r\n            }\r\n        })\r\n        .catch((e) => errorHandler(e));\r\n    }\r\n}","\r\nimport {\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCardFooter,\r\n    CCol,\r\n    CTextarea,\r\n  CButton,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n    CRow} from '@coreui/react';\r\nimport CIcon from '@coreui/icons-react';\r\n\r\nconst view = (props) => {\r\n    const {\r\n        state,\r\n        onRoleSelected,\r\n        removeRole,\r\n        handleSubmit,\r\n        handleChange\r\n    } = props;\r\n    return (\r\n        <CRow>\r\n            <CCol md=\"8\">\r\n                <CCard>\r\n                    <CCardHeader>\r\n                        Daftar Jabatan\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                    <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\r\n                        <thead className=\"thead-light\">\r\n                        <tr>\r\n                            <th>Nama Jabatan</th>\r\n                            <th className=\"text-center\"><CIcon name=\"cil-user\" /></th>\r\n                            <th>Keterangan</th>\r\n                            <th className=\"text-center\"><CIcon name=\"cil-settings\" /></th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            state.roleList.map((item, index) => {\r\n                                return (<tr onClick={() => onRoleSelected(index)} key={index} style={{cursor: 'pointer', backgroundColor: index === state.selectedRole ? \"#ebedef\" : \"white\"}}>\r\n                            <td> <div>{item.name}</div> </td>\r\n                            <td className=\"text-center\">\r\n                                <div className=\"c-avatar\">\r\n                                    <img src={'/avatars/1.jpg'} className=\"c-avatar-img\" alt=\"admin@bootstrapmaster.com\" />\r\n                                </div>\r\n                            </td>\r\n                            <td> <div>{item.desc}</div> </td>\r\n                            <td className=\"text-center\"> <CButton onClick={()=>removeRole(index)} size=\"sm\" variant=\"ghost\" shape=\"pill\" color=\"danger\"><CIcon name=\"cil-trash\" /></CButton> </td>\r\n                        </tr>)\r\n                            })\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                    </CCardBody>\r\n                </CCard>\r\n            </CCol>\r\n        \r\n            <CCol md=\"4\">      \r\n            <CForm onSubmit={handleSubmit}>\r\n          <CCard>\r\n            <CCardHeader>\r\n              {state.roleForm['$id'] ? 'Edit' : 'Tambah'}\r\n              <small> Jabatan</small>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"city\">Nama</CLabel>\r\n                    <CInput name=\"name\" value={state.roleForm.name} placeholder=\"Nama Jabatan\" onChange={(e)=>handleChange(e)} />\r\n                </CFormGroup>\r\n              <CFormGroup>\r\n                  <CLabel>Keterangan</CLabel>\r\n                  <CTextarea \r\n                      name=\"desc\" \r\n                      value={state.roleForm.desc}\r\n                      onChange={(e)=>handleChange(e)}\r\n                      rows=\"3\"\r\n                      placeholder=\"Tulis disini...\" \r\n                    />\r\n              </CFormGroup>\r\n                {state.roleForm['$id'] ? \r\n                    <CFormGroup>\r\n                        <CLabel htmlFor=\"ID\">ID</CLabel>\r\n                        <CInput name=\"$id\" value={state.roleForm['$id']} placeholder=\"ID\" readOnly />\r\n                    </CFormGroup>\r\n                    : <div></div>\r\n                }\r\n            </CCardBody>\r\n            <CCardFooter>\r\n              <CButton type=\"submit\" size=\"sm\" color=\"info\"><CIcon name=\"cil-scrubber\" /> Simpan</CButton>\r\n            </CCardFooter>\r\n          </CCard>\r\n              </CForm>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default view;","import React from 'react';\r\nimport RoleService from '../services/RoleService';\r\nimport View from '../views/RoleView';\r\n\r\nconst resetData = {name: \"\", desc: \"\"};\r\n\r\nexport default class ListStation extends React.Component { \r\n  constructor(props) {\r\n    super(props);\r\n    this.loading = props.loading;\r\n    this.modal = props.modal;\r\n    this.state = {selectedRole: -1, roleForm: resetData, roleList: []};\r\n    this.roleService = new RoleService(props.auth.sdk);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loading(true);\r\n    this.getList();\r\n  }\r\n\r\n  getList = () => {\r\n    this.roleService.list(this.callbackList);\r\n  }\r\n\r\n  onRoleSelected = (index) => {\r\n    if(index === this.state.selectedRole) {\r\n      this.setState({selectedRole: -1, roleForm: resetData});\r\n\r\n    } else {\r\n      let roleForm = {...this.state.roleForm};\r\n      roleForm = this.state.roleList[index];\r\n      this.setState({selectedRole: index, roleForm: roleForm});\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    let roleForm = {...this.state.roleForm};\r\n    roleForm[event.target.name] = event.target.value;\r\n    this.setState({roleForm: roleForm});\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.loading(true);\r\n    if(this.state.roleForm['$id']) {\r\n      this.roleService.update(this.callbackSubmit, this.state.roleForm);\r\n    } else {\r\n      this.roleService.create(this.callbackSubmit, this.state.roleForm);\r\n    }\r\n  }\r\n\r\n  removeRole = () => {\r\n    const content = {\r\n      title: \"Peringatan Penghapusan\",\r\n      content: \"Anda yakin akan menghapus data ini?\",\r\n      color: \"danger\",\r\n      callback: (s) => this.confirmRemoved(s)\r\n    }\r\n    this.modal(true, content);\r\n  }\r\n\r\n  confirmRemoved(state) {\r\n    if(state) {\r\n      this.roleService.delete(this.callbackRemove, this.state.roleForm);\r\n    }\r\n  }\r\n\r\n  callbackList = (data) => {\r\n    this.setState({roleList: data});\r\n    this.loading(false);\r\n  }\r\n\r\n  callbackSubmit = () => {\r\n    this.setState({roleForm: resetData});\r\n    this.getList();\r\n  }\r\n\r\n  callbackRemove = () => {\r\n    this.getList();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View\r\n        state={this.state}\r\n        onRoleSelected={this.onRoleSelected}\r\n        handleChange={this.handleChange}\r\n        handleSubmit={this.handleSubmit}\r\n        removeRole={this.removeRole}\r\n      />\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}